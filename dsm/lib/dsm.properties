############################## Logging #########################################
#
# Set this to true or false to enable/disable java.util.logging.
# In general, you should not set this to false, and instead should modify
# the level.  This primarily to avoid missing error and warning messages.
logging.enabled=true
# Level of top level PML logging: ALL, SEVERE, WARNING, INFO, FINE, FINER, FINEST or ALL.
# To control the logging level of individual components, see the details properties
# at the end of this file.
com.ibm.watson.dsm.level=INFO
com.ibm.watson.dsm.engine.level=INFO
com.ibm.watson.dsm.platform.topology.level=INFO
handlers=java.util.logging.ConsoleHandler
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
java.util.logging.ConsoleHandler.level=ALL

######################################  Platform ############################################################
# The number of msecs to wait for a response to a query of a remote platform.
#platform.query.timeout=1000
#
######################################  Topology Monitoring ############################################################
# Defines the IPhysicalTopologyMonitor implementation provided by DSMConfig, which is used by AbstractSharedDataPlatform 
# when none is provided to the consutructor.  Valid values are as follows:
# mcast-global (default) - use an McastTopologyMonitor implementation maintains global reachability information about all nodes.
#	See mcast.topology.monitor.* for further configuration.
# mcast-neighbors -  use an McastTopologyMonitor implementation and maintains only information about immediate neighbors.
#	See mcast.topology.monitor.* for further configuration.
# central - uses the CentralizedTopologyMonitor.  See central.topology.monitor.* properties for further configuration.
# registry - uses the old StarTopologyMonitor which requires a separate IDistributedApplicationRegistry implementation
#	defined by application.registry property below.  This may eventually be deprecated.
#application.physical.topo.monitor=central

######################################  Multicast/Broadcast Discovery ####################################################

# The following control the behavior of the McastTopologyMonitor (when application.physical.topo.monitor=mcast-*)
# The multicast or broadcast address used by both clients and servers to exchange messages.
# Use 127.255.255.255 if having trouble with multicast on home network.
#mcast.topology.monitor.address=127.255.255.255
# The port that multicast group uses to receive messages
#mcast.topology.monitor.port=
# The average number of milliseconds between multicast writes
#mcast.topology.monitor.interval
# A comma-separated list of network interface cards over which multicast packets should be sent.  The value 'all' may be used
# to indicate all available NICs should be used for broadcasting. On unix, a value like eth0 is also common.
#mcast.topology.monitor.interfaces=all
#multicast security
#specifies whether multicast data need to be securely transmited
#multicast.security.password=VirtualInformationExchange

#####################################  Centralized Discovery ####################################################
# The following are used when application.physical.topo.monitor=central.
#central.topology.monitor.host=defined on the leaf nodes to point at the central monitor.  Must be undefined on central
#	monitor to cause it to know it is the central monitor.  It listens on all addresses.
#central.topology.monitor.port=32761	defines the port that the central monitor listens for messages from the leaf nodes. Defaults.
#central.topology.monitor.seconds=5 defines the heart beat rate in seconds between central station and leaf nodes. Defaults.

#####################################  Fixed registry (deprecated?) ####################################################

# Set the type of application registry to used by those using DSMConfig.getConfiguredApplicationRegistry(), which
# includes the DSMEngine. Currently one of 'jcs' or 'wpml' or 'fixed'.  Soon to be deprecated.
#application.registry=wpml
#fixed.registrations.file=fixed-regs.txt

# Port used by SolidDB, which is used by the MemoryTupleStorage, which is used by the rule engine. 
# Defaults to MemoryTupleStorage.DEFAULT_SOLID_DB_PORT, which at the time of this writing was 1934.
#storage.memory.soliddb.port=1934

###################################### Local IP Address Determination ################################################
# The following configure the behavior of HostAddress.getLocalIPAddress(), which is used throughout to determine
# the local IP address.  The following is from the javadoc for getLocalIPAddress();
# Get the name of the local host, with many options defined in DSM properties. If "networking.hostip.plugin.class" 
# properties is set, then expect it to have a static method named "getIPAddress" and call it to get the name of 
# the host. If not set, then look for the "networking.hostip.value" to provide the value. If that is not set, 
# then look for the "networking.hostip.nic" property value and get the ip address of the named network interface 
# card. If none of these properties are set, then use InetAddress.getLocalHost().
#networking.hostip.plugin.class=com.ibm.watson.SomeClass
#networking.hostip.value=9.2.2.33
#networking.hostip.nic=eth0
###################################### Network Receiver ###############################################################

# Address that the NetworkMessageReceiver should register as the address on which it can receive data.  
# Supersedes receiver.network.interface.  Deprecated in favor of networking.hostip.value.
#receiver.network.address=9.2.1.2
# Network Interface that the NetworkMessageReceiver should use to find the address to register as the address
#  on which it can receive data. Deprecated in favor of networking.hostip.nic.
#receiver.network.interface=eth0

#ssl properties for both the Network Message Receiver and Sender.
#specifies the use of SSL and authentication 
#network.message.transmission.use.ssl=false
#ssl.client.key.store.name=client.jks
#ssl.client.key.store.password=ClientJKS
#ssl.client.certificate.password=ClientKey
#ssl.server.key.store.name=server.jks
#ssl.server.key.store.password=ServerJKS
#ssl.server.certificate.password=ServerKey

###################################### Network Sender ################################################################
# Defines the connection timeout when sending messages to named hosts and ports using the NetworkMessageSender implementation (in msec).
#sender.network.timeout=5000

###################################### Topology and discovery ###############################################################

# Defines the network timeout and hops for testing ip address reachability (in msec).
# physical.topology.network.timeout=2000
# physical.topology.network.maxhops=20

# Use to turn on policy controls in the AbstractSharedDataPlatform when a constructor is used that does not specify this setting.
# Then use wpml.properties to configure the repository and PDP.
#platform.policy.enabled=true
# Use to turn on monitoring events from AbstractSharedDataPlatform and DSMEngine.  A client should then be listening for these events.
#platform.monitoring.enabled=true

######################################  ###############################################################
# If set larger than 0, then turns on a thread that periodically refreshes all platform subscriptions
# This is useful when using the FixedRegistry.
#subscription.refresh.msec=10000
# JDBC settings for the DSMEngine when storage is set to an arbitrary JDBC server.
engine.storage=jdbc
engine.jdbc.drivers=org.apache.derby.jdbc.ClientDriver
engine.jdbc.url=jdbc:derby:memory:%app%;create=true
# Note that if you have derby configured to use authentication, you will need to use user/password accepted by your derby config.
engine.jdbc.username=root
engine.jdbc.password=dsm

#engine.jdbc.url=jdbc:derby://localhost:1527/memory:%app%;create=true

# SolidDB - jdbc need to be specified here, but should NOT be modified.
#engine.storage=memory
#engine.jdbc.drivers=solid.jdbc.SolidDriver
#engine.jdbc.url=jdbc:solid://localserver:0

# Default, unprefixed, jdbc storage properties. Used by TupleAdmin, at least.
jdbc.drivers=org.apache.derby.jdbc.ClientDriver
jdbc.url=jdbc:derby:memory:%app%;create=true
jdbc.username=root
jdbc.password=dsm

